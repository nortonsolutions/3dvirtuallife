<!DOCTYPE html>
<html lang="en">
    <head>
        <title>Norton's 3D Virtual Life - Adventure Awaits</title>
        <meta name="description" content="Epic 3D multiplayer adventure game">
        {{>headerStuff fontAwesome=true jQuery=true bootStrap=true handlebars=true}}

    </head>
    <body>
        <header>
            {{>navbar mainActive="active"}}
        </header>
        <main>
            <div class="hero-section">
                <div class="hero-content text-center">
                    <h1 class="hero-title display-3">
                        <i class="fas fa-dragon mr-3"></i>
                        Epic Adventure
                    </h1>
                    <p class="hero-subtitle lead">Classic Plus Experience</p>
                    <hr class="hero-divider my-4">
                    <p class="hero-description">Embark on an unforgettable journey through a vast 3D world</p>
                    <div class="hero-actions mt-4">
                        <a class="startGame btn btn-hero btn-lg mr-3" href="#" role="button">
                            <i class="fas fa-play mr-2"></i>Start Game
                        </a>
                        <a class="clearGame btn btn-hero-outline btn-lg" href="#" role="button">
                            <i class="fas fa-trash-alt mr-2"></i>Clear Game
                        </a>
                    </div>
                </div>
            </div>
        </main>

    <style>
        .hero-section {
            min-height: calc(100vh - 56px);
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
            position: relative;
            overflow: hidden;
        }

        .hero-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320"><path fill="%23667eea" fill-opacity="0.1" d="M0,96L48,112C96,128,192,160,288,160C384,160,480,128,576,112C672,96,768,96,864,112C960,128,1056,160,1152,165.3C1248,171,1344,149,1392,138.7L1440,128L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path></svg>') no-repeat bottom;
            background-size: cover;
            pointer-events: none;
        }

        .hero-content {
            position: relative;
            z-index: 1;
            padding: 3rem 2rem;
            max-width: 800px;
            animation: fadeInUp 0.8s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .hero-title {
            color: white;
            font-weight: 700;
            text-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
            margin-bottom: 1rem;
        }

        .hero-subtitle {
            color: var(--success-color);
            font-size: 1.5rem;
            font-weight: 300;
        }

        .hero-divider {
            border-top: 2px solid rgba(255, 255, 255, 0.3);
            width: 100px;
            margin-left: auto;
            margin-right: auto;
        }

        .hero-description {
            color: rgba(255, 255, 255, 0.9);
            font-size: 1.1rem;
        }

        .btn-hero {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            border: none;
            color: white;
            padding: 12px 32px;
            font-weight: 600;
            border-radius: 50px;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
            transition: all 0.3s ease;
        }

        .btn-hero:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);
            color: white;
        }

        .btn-hero-outline {
            background: transparent;
            border: 2px solid white;
            color: white;
            padding: 12px 32px;
            font-weight: 600;
            border-radius: 50px;
            transition: all 0.3s ease;
        }

        .btn-hero-outline:hover {
            background: white;
            color: var(--primary-color);
            transform: translateY(-2px);
        }

        @media (max-width: 768px) {
            .hero-title {
                font-size: 2rem;
            }
            .hero-subtitle {
                font-size: 1.2rem;
            }
            .hero-actions .btn {
                display: block;
                width: 100%;
                margin: 0.5rem 0 !important;
            }
            .hero-content {
                padding: 2rem 1rem;
            }
        }
    </style>
    <script src="/cdn/threejs/build/three.js"></script>
    <script src="/public/pointerLockControls.js"></script>    
    <script src="/cdn/threejs/examples/js/libs/inflate.min.js"></script>
    <script src="/cdn/threejs/examples/js/libs/stats.min.js"></script>
    <script src="/cdn/threejs/examples/js/objects/Fire.js"></script>
    <script src="/cdn/threejs/examples/js/objects/Reflector.js"></script>
    <script src="/cdn/threejs/examples/js/objects/Refractor.js"></script>
    <script src="/cdn/threejs/examples/js/shaders/WaterRefractionShader.js"></script>
    <script src="/cdn/threejs/examples/js/objects/Water2.js"></script>
    <script src="/cdn/threejs/examples/js/loaders/GLTFLoader.js"></script>
    {{!-- <script src="/cdn/threejs/examples/js/loaders/FBXLoader.js"></script> --}}
    {{!-- <script src="/cdn/threejs/examples/js/loaders/OBJLoader.js"></script> --}}

    <!-- The Modal -->
    <div id="myModal" class="myModal">

        <!-- Modal content -->
        <div class="modal-content">
            <div class="modal-header">
                <h2 id="modal-title"></h2>
                <span class="close">&times;</span>
            </div>
            <div id="modal-body">
            </div>
            <div class="modal-footer">
                <h3></h3>
            </div>
        </div>

    </div>

    <!-- Loading Spinner -->
    <div class="spinner-overlay">
        <div class="spinner"></div>
    </div>

    <div id="message"></div>
    <div id="statusUpdates"></div>
    <div id="minimap"></div>
    <div id="sidebar"></div>
    <div id="chatbar"></div>

    </body>
    
    <!-- Inject server-side environment variables for client-side use -->
    <script>
        window.base_url = {{{ jsonStringify base_url }}};
    </script>
    
    <script type="module">

       import { app } from '/app.js'
       app();
        
    </script>

    {{!-- position --}}
    <script id="vertexShader1" type="x-shader/x-vertex">
        uniform float time;
        void main() {
            vec3 posChanged = position;
            posChanged.x = posChanged.x*(abs(sin(time*1.0)));
            posChanged.y = posChanged.y*(abs(cos(time*1.0)));
            posChanged.z = posChanged.x*(abs(sin(time*1.0)));

            gl_Position = projectionMatrix * modelViewMatrix * vec4(posChanged,1.0);
        }
    </script>

    {{!-- color --}} 
    <script id="fragmentShader1" type="x-shader/x-fragment">  
        #ifdef GL_ES
        precision mediump float;
        #endif

        uniform float time;
        uniform vec2 resolution;

        void main (void) {
            vec2 uPos = (gl_FragCoord.xy / resolution.xy);
            uPos.x -= 1.0;
            uPos.y -= 0.5;

            vec3 color = vec3(0.0);
            float vertColor = 2.0;
            for (float i = 0.0; i < 15.0; ++i) {
                float t = time * (0.9);
                uPos.y += sin(uPos.x*i + t+i/2.0) * 0.1;
                float fTemp = abs(1.0 / uPos.y / 100.0);
                vertColor += fTemp;
                color += vec3(fTemp*10.0-i)/10.0, fTemp*i/10.0, pow(fTemp,1.5)*1.5;
            }

            vec4 color_final = vec4(color, 1.0);
            gl_FragColor = color_final;
        }
    </script>

</html>